		.data
text:		.asciiz	"Please enter Text String: "
pattern:	.asciiz	"Please enter Pattern String: "
match:		.asciiz	"Yes, there is a match."
no_match:	.asciiz	"No, there is no match."
str1:		.space	82
str2:		.space	82
index:		.asciiz	"Starting index = "
partialMatch:	.asciiz	"Length of longest partial match = "
nl:		.asciiz	"\n"
		.text
		.globl main
main:
	addi	$v0, 4
	la	$a0, text
	syscall

	li	$v0, 8
	la	$a0, str1
	addi	$a1, $0, 82
	syscall

	li	$v0, 4
	la	$a0, pattern
	syscall

	li	$v0, 8
	la	$a0, str2
	addi	$a1, $0, 82
	syscall

	la	$a0, str1
	la	$a1, str2
	jal	strcmp

	beq	$v0, $0, match1
	li	$v0, 4
	la	$a0, no_match
	syscall

	j	exit

match1:	li	$v0, 4
	la	$a0, match
	syscall

	li	$v0, 4
	la	$a0, nl
	syscall

	li	$v0, 4
	la	$a0, index
	syscall

	move	$a0, $t0
	li	$v0, 1
	syscall

	li	$v0, 4
	la	$v0, nl

exit:
	li	$v0, 10
	syscall

strcmp:
	add	$t0, $0, $0
	add	$t1, $0, $a0
	add	$t2, $0, $a1

loop:
	lb	$t3($t1)
	lb	$t4($t2)

	beqz	$t3, checkt2 #if $t3 is 0, go to checkt2
	beqz	$t4, missmatch	#if $t4 is 0, go to missmatch
	slt	$t5, $t3, $t4 #if $t3 is less than $t4, $t5 is set to 1
	bnez	$t5, missmatch #if $t5 does not == 0, jump to missmatch
	addi	$t1, $t1, 1 
	addi	$t2, $t2, 1
	j	loop

missmatch:
	addi	$v0, $0, 1
	j	endfunction
	
checkt2:
	bnez	$t4, missmatch
	add	$v0, $0, $0

endfunction:
	jr	$ra
